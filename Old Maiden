import java.util.Scanner;
import java.util.Random;

/**
 * The class <b>A1Q4</b> is an implementation of the
 * ``Old Maid'' card game, based on the Python implementation
 * given in ITI1020
 *
 * @author gvj (gvj@eecs.uottawa.ca)
 *
 */

public class A1Q4{

	/**
	* Array used to store the full deck of cards,
	*/
	private static String[] deck;

	/**
	* The current number of cards in the full deck of cards
	*/
	private static int sizeDeck(String[] flength){
		return flength.length;

	}

	/**
	* Array used to store the player's deck of cards
	*/
	private static String[] playerDeck(String[] updated){
		return updated;
	}

	/**
	* The current number of cards in the player's deck of cards
	*/
	private static int sizePlayerDeck(String[] p){
		int j=p.length;
		return j;
	}

	/**
	* Array used to store the computer's deck of cards
	*/
	private static String[] computerDeck(String[] updated2){
		return updated2;
	}

	/**
	* The current number of cards in the computer's deck of cards
	*/
	private static int sizeComputerDeck(String[] u2){
		return u2.length;
	}


	/**
	* An instance of java.util.Scanner, which will get input from the
	* standard input
	*/
 	private static Scanner sc;

	/**
	* An instance of java.util.Random, to generate random numbers
	*/
 	private static Random generator;

	/** 
     * Constructor of the class. Creates the full deck of cards
     */
 
 	public  A1Q4(){
		
		sc = new Scanner(System.in);
		generator = new Random();

		String[] suits = {"\u2660", "\u2661", "\u2662", "\u2663"};
		String[] ranks = {"2","3","4","5","6","7","8","9","10","J","Q","K","A"};
		sizeDeck = suits.length*ranks.length - 1;
		deck = new String[sizeDeck];
		int index = 0;
		for(int i =0 ; i < ranks.length; i++){
			for(int j =0 ; j < suits.length; j++){
				if(!(ranks[i]=="Q" && suits[j]=="\u2663")){
					deck[index++]= ranks[i] + " of " + suits[j];
				}
			}
		}
	}

	/** 
     * Waits for user input
     */
	private static void waitForUserInput(){
		sc.nextLine();
	}

	/**
	*  Deals the cards, taking sizeDeck cards out of deck, and deals them
	*  into playerDeck and computerDeck, starting with playerDeck
	*/
	private static String[][] dealCards(String[] full){

		/* This function returns a 2D array

		where the first element in the 2D array is an array of the computers deck of cards 

		and the users deck of cards is the 2 element in the array (@index 1). For some reason this 

		is returning an address rather than a 2D array

		*/
		String[] comp= new String[25];
		int j=0;
		String[] playerdeck= new String[26];
		for (int i=0; i<25; i=i+2){
			comp[j]=full[i];
			j++;
		}
		j=0;
		for (int k=1; k<26; k=k+2){
			playerdeck[j]=full[k];
			j++;
		}

		String[][] compUserDeck;
		compUserDeck= new String[2][];
		compUserDeck[0]=comp;
		compUserDeck[1]= playerdeck;

		
		return compUserDeck;
	}

	/**
	*  Removes all the pairs of cards from the array deckOfCards, that currently
	* contains currentSize cards. deckOfCards is unsorted. It should also not
	* be sorted once the method terminates. 
	*
    *   @param deckOfCards the array of Strings representing the deck of cards
    *   @param currentSize the number of strings in the arrayOfStrings,
    *			stored from arrayOfStrings[0] to arrayOfStrings[currentSize-1] 
    *   @return the number of cards in deckOfCards once the pair are removed
    */
	private static int removePairs(String[] deckOfCards, int currentSize){
		
		return 2; // COUNTING THE NUMBER OF PAIRS 

	}

	/**
	*  Get a valid index of a card to be removed from computerDeck.
	*	Note: this method does not check that the input is indeed an integer and
	*	will crash if something else is provided.
	*  @return the valid input.
	*/
	private static int getValidInput(){
		System.out.println("Your turn. Pick a card You want to remove from my deck");
		Scanner user = new Scanner(System.in);
		int remove= user.nextInt();
		return remove;

	}


	/**
	*  The actual game, as per the Python implementation
	*/
	public static void playGame(){

 // REPLACE THE BODY OF THIS METHOD WITH YOUR OWN IMPLEMENTATION
		
	}


	/**
     * The main method of this program. Creates the game object
     * and calls the playGame method on it.
     * @param args ignored
	 */    

 
	public static void main(String[] args){
	
		A1Q4 game = new A1Q4();		

		game.playGame();
	
		
	}
}
